--Question 1
SELECT * FROM CROP;
SELECT * FROM CROP_TYPE;

SELECT CROP_TYPE, COUNT(C.CROP_ID) AS CROP_COUNT, SUM(C.CROP_YIELD_KGM2) AS CROP_YIELD
FROM CROP_TYPE CT JOIN CROP C ON CT.CROP_ID = C.CROP_ID GROUP BY CROP_TYPE
ORDER BY CROP_YIELD DESC;


--Question 2
WITH IrrigationResults AS (
    SELECT
        CT.CROP_TYPE,
        IM.IRRIGATION_METHOD,
        WS.WATER_SOURCE,
        AVG(C.CROP_YIELD_KGM2) AS AVG_CROP_YIELD
    FROM
        IRRIGATION_METHON IM
    JOIN
        IRRIGATION I ON IM.IRRIGATION_METHOD_ID = I.IRRIGATION_METHOD_ID
    JOIN
        WATER_SOURCE WS ON I.WATER_SOURCE_ID = WS.WATER_SOURCE_ID
    JOIN
        CROP C ON I.TIMESTAMP = C.TIMESTAMP
    JOIN CROP_TYPE CT ON C.CROP_ID = CT.CROP_ID
    GROUP BY
        IM.IRRIGATION_METHOD, WS.WATER_SOURCE, CT.CROP_TYPE),


    OptimizedAllocation AS (SELECT
        CROP_TYPE,
        IRRIGATION_METHOD,
        WATER_SOURCE,
        AVG(AVG_CROP_YIELD) AS AVG_YIELD
    FROM
        IrrigationResults
    GROUP BY
        1,2,3
    HAVING
        AVG(AVG_CROP_YIELD) = (
            SELECT
                MAX(AVG_CROP_YIELD)
            FROM
                IrrigationResults
            WHERE
                CROP_TYPE = IrrigationResults.CROP_TYPE
        )
)

SELECT
    OA.CROP_TYPE,
    OA.IRRIGATION_METHOD,
    OA.WATER_SOURCE,
    OA.AVG_YIELD
FROM
    OptimizedAllocation OA;


--Question 3
 WITH RegionalPerformance AS (
    SELECT
        L.REGION,
        CT.CROP_TYPE,
        SUM(C.CROP_YIELD_KGM2) AS TOTAL_CROP_YIELD,
        COUNT(C.CROP_ID) AS CROP_COUNT
    FROM
        LOCATION L
    JOIN
        SENSOR S ON L.SENSOR_ID = S.SENSOR_ID
    JOIN CROP C ON S.TIMESTAMP = C.TIMESTAMP
    JOIN
        CROP_TYPE CT ON C.CROP_ID = CT.CROP_ID
    GROUP BY
        L.REGION, CT.CROP_TYPE
),
RegionSummary AS (
    SELECT
        RP.REGION,
        SUM(RP.TOTAL_CROP_YIELD) AS TOTAL_YIELD,
        SUM(RP.CROP_COUNT) AS TOTAL_CROP_COUNT,
        AVG(RP.TOTAL_CROP_YIELD / RP.CROP_COUNT) AS AVG_YIELD_PER_CROP
    FROM
        RegionalPerformance RP
    GROUP BY
        RP.REGION
)
SELECT
    RS.REGION,
    RS.TOTAL_YIELD,
    RS.TOTAL_CROP_COUNT,
    RS.AVG_YIELD_PER_CROP
FROM
    RegionSummary RS
ORDER BY
    RS.TOTAL_YIELD DESC;

--Question 4
WITH CropYieldAndPest AS (
  SELECT
    c.TIMESTAMP,
    c.CROP_YIELD_KGM2,
    c.GROWTH_STAGE_ID,
    c.PEST_ID,
    gs.GROWTH_STAGE,
    p.PEST_DESCRIPTION
  FROM CROP c
  JOIN GROWTH_STAGE gs ON c.GROWTH_STAGE_ID = gs.GROWTH_STAGE_ID
  LEFT JOIN PEST p ON c.PEST_ID = p.PEST_ID
  WHERE p.PEST_DESCRIPTION IS NOT NULL
),
IrrigationAndSoil AS (
  SELECT
    i.TIMESTAMP,
    i.IRRIGATION_DURATION_SEC,
    i.IRRIGATION_METHOD_ID,
    i.WATER_SOURCE_ID,
    s.SOIL_COMP,
    s.SOIL_MOISTURE,
    s.SOIL_PH,
    s.NITROGEN_LEVEL,
    s.PHOSPHORUS_LEVEL,
    s.ORGANIC_MATTER
  FROM IRRIGATION i
  LEFT JOIN SOIL s ON i.TIMESTAMP = s.TIMESTAMP
),
WeatherData AS (
  SELECT
    w.TIMESTAMP,
    w.WIND_SPEED_MS,
    w.PRECIPITATION_M,
    wc.WEATHER_CONDITION
  FROM WEATHER w
  JOIN WEATHER_CONDITION wc ON w.WEATHER_CONDITION_ID = wc.WEATHER_CONDITION_ID
)
SELECT
  c.TIMESTAMP,
  c.CROP_YIELD_KGM2,
  c.GROWTH_STAGE,
  c.PEST_DESCRIPTION,
  i.IRRIGATION_DURATION_SEC,
  i.SOIL_COMP,
  i.SOIL_MOISTURE,
  i.SOIL_PH,
  i.NITROGEN_LEVEL,
  i.PHOSPHORUS_LEVEL,
  i.ORGANIC_MATTER,
  w.WIND_SPEED_MS,
  w.PRECIPITATION_M,
  w.WEATHER_CONDITION
FROM CropYieldAndPest c
JOIN IrrigationAndSoil i ON c.TIMESTAMP = i.TIMESTAMP
JOIN WeatherData w ON c.TIMESTAMP = w.TIMESTAMP
LIMIT 1000;
